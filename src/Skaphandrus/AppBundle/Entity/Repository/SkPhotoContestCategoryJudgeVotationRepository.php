<?php

namespace Skaphandrus\AppBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Skaphandrus\AppBundle\Utils\Utils;

/**
 * SkPhotoContestCategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SkPhotoContestCategoryJudgeVotationRepository extends EntityRepository {

    public function findMostVotedPhotosByCategory($category_id) {

        $em = $this->getEntityManager();
        $connection = $em->getConnection();
        $sql = "SELECT id, sum(countable) as countable FROM (
                    ( 
                    SELECT v.photo_id as id, count(v.photo_id) as countable 
                    FROM 
                      sk_photo_contest_vote as v 
                    where 
                      v.category_id = " . $category_id . " 
                    group by 
                      v.photo_id 
                    order by 
                      countable desc
                    ) 
                UNION ALL 
                    (
                    SELECT photo_id, 0 as countable
                    FROM 
                        sk_photo_contest_category_photo as c 
                        where c.category_id = " . $category_id . "  
                    )
                ) t3 
                group by id 
                order by countable desc";

        $statement = $connection->prepare($sql);
        $statement->execute();
        $allPhotos = $statement->fetchAll();

//        $allPhotos = array(
//            0 => array("id" => "26492", "countable" => "13"),
//            1 => array("id" => "26308", "countable" => "13"),
//            2 => array("id" => "23995", "countable" => "13"),
//            3 => array("id" => "26798", "countable" => "13"),
//            4 => array("id" => "26331", "countable" => "13"),
//            5 => array("id" => "24085", "countable" => "13"),
//            6 => array("id" => "619", "countable" => "13"),
//            7 => array("id" => "26392", "countable" => "13"),
//            8 => array("id" => "23576", "countable" => "13"),
//            9 => array("id" => "23991", "countable" => "7"),
//            10 => array("id" => "25500", "countable" => "7"),
//            11 => array("id" => "26648", "countable" => "7"),
//            12 => array("id" => "25575", "countable" => "7"),
//            13 => array("id" => "23975", "countable" => "7"),
//            14 => array("id" => "26022", "countable" => "2"),
//            15 => array("id" => "25258", "countable" => "4"),
//            16 => array("id" => "25279", "countable" => "4"),
//            17 => array("id" => "23653", "countable" => "8"),
//            18 => array("id" => "26528", "countable" => "1"),
//        );

        $photos = array();
        $key = 0;

        //devolver i <= 10
        //devolver i == i-1 and i>10
        while ((($key <= count($allPhotos) - 1) && ($key <= 9)) ||
        ($key <= count($allPhotos) - 1) && ($allPhotos[$key]['countable'] == $allPhotos[$key - 1]['countable'])) {
            //echo $allPhotos[$key]['countable'] . "<br/>";
            //echo $key . "<br/>";
            $photos[] = $allPhotos[$key];
            $key ++;
        }

        //dump($photos);

        return $photos;
    }

    public function getJudgeVotationsByCategory($judge_id, $category_id) {

        return $this->getEntityManager()->createQuery(
                        'SELECT v
            FROM SkaphandrusAppBundle:SkPhotoContestCategoryJudgeVotation v
                       WHERE v.category = :category_id AND v.judge = :judge_id'
                )->setParameter('category_id', $category_id)->setParameter('judge_id', $judge_id)->getOneOrNullResult();
    }

    public function getJudgeVotationsByContest($contest_id, $judge) {

        return $this->getEntityManager()->createQuery(
                        'SELECT v
            FROM SkaphandrusAppBundle:SkPhotoContestCategoryJudgeVotation v
            JOIN SkaphandrusAppBundle:SkPhotoContestCategory c with c.id = v.category
            WHERE c.contest = :contest AND v.judge = :judge'
                )->setParameter('contest', $contest_id)->setParameter('judge', $judge->getId())->getResult();
    }

    public function findContestByVotation($votation_id) {

        return $this->getEntityManager()->createQuery(
                        'SELECT c
            FROM SkaphandrusAppBundle:SkPhotoContest c
            JOIN SkaphandrusAppBundle:SkPhotoContestCategory cc with c.id = cc.contest
            JOIN SkaphandrusAppBundle:SkPhotoContestCategoryJudgeVotation v with cc.id = v.category
            WHERE v.id = :votation '
                )->setParameter('votation', $votation_id)->getSingleResult();
    }

    public function getJudgePhotoVoteResults($category_id) {

        $em = $this->getEntityManager();
        $connection = $em->getConnection();

//        $sql = "SELECT photo_id, sum(points) as points
//                FROM (
//                    SELECT votation.category_id, votation.judge_id, vote.photo_id as photo_id, vote.points as points, votation.id 
//                    FROM sk_photo_contest_category_judge_photo_vote as vote 
//                    JOIN sk_photo_contest_category_judge_votation as votation on vote.votation_id = votation.id 
//                    WHERE category_id = ". $category_id .") as somatorio 
//                GROUP by photo_id 
//                HAVING points > 0
//                ORDER by points desc";

        $sql = "select vote.photo_id as photo_id, sum(vote.points) as points, vote.votation_id as votation
                from sk_photo_contest_category_judge_photo_vote as vote
                join sk_photo_contest_category_judge_votation as votation
                on votation.id = vote.votation_id
                where votation.category_id = " . $category_id . "
                group by photo_id
                HAVING points > 0
                ORDER by points desc";

        $statement = $connection->prepare($sql);
        $statement->execute();
        $values = $statement->fetchAll();
        $result = array();

        foreach ($values as $value) {

            $photo = $em->getRepository('SkaphandrusAppBundle:SkPhoto')->find($value['photo_id']);

            $votation = $em->getRepository('SkaphandrusAppBundle:SkPhotoContestCategoryJudgeVotation')->find($value['votation']);
            
            $photoVote = new \Skaphandrus\AppBundle\Entity\SkPhotoContestCategoryJudgePhotoVote();
            $photoVote->setPhoto($photo);
            $photoVote->setPoints($value['points']);
            $photoVote->setVotation($votation);

            $result[] = $photoVote;
        }

//        dump($values);

        return $result;
    }

}
