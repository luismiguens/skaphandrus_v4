<?php

namespace Skaphandrus\AppBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * SkPhotoContestRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SkPhotoContestRepository extends EntityRepository {
    
    public function getPhotographers($contest_id) {
                
        $em = $this->getEntityManager();
        $connection = $em->getConnection();

        $sql = "SELECT distinct f.id as id, count(p.id) as num_photos
                FROM fos_user as f
                JOIN sk_photo as p
                on f.id = p.fos_user_id
                JOIN sk_photo_contest_category_photo as cat_pho
                ON p.id = cat_pho.photo_id
                JOIN sk_photo_contest_category as cat
                ON cat_pho.category_id = cat.id
                where cat.contest_id = " . $contest_id . " 
                group by id
                order by num_photos desc";

        $statement = $connection->prepare($sql);
        $statement->execute();
        $values = $statement->fetchAll();
        $result = array();
        
        foreach ($values as $value) {
            $user = $em->getRepository('SkaphandrusAppBundle:FosUser')->find($value['id']);
            $user->setPhotosInContest($value['num_photos']);
            $result[] = $user;
        }
  
        return $result;
    }

    public function findPhotographers($contest) {

        $categories = $contest->getCategories();
        $users = array();

        foreach ($categories as $category) {
            foreach ($category->getPhoto() as $photo) {
                $user = $photo->getFosUser();

                if ($user && !array_key_exists($user->getId(), $users)) {
                    $users[$user->getId()] = $user;
                }
            }
        }

        return $users;
    }

    public function findPhotosFromUserInContest($user_id, $contest_id) {
        $categories = $this->getEntityManager()->createQuery(
            'SELECT cat
            FROM SkaphandrusAppBundle:SkPhotoContestCategory cat
            WHERE IDENTITY(cat.contest) = :contest_id'
        )->setParameter('contest_id', $contest_id)->getResult();

        $photos = array();
        foreach ($categories as $category) {
            $photo_ids = array();

            foreach ($category->getPhoto() as $photo) {
                $photo_ids[] = $photo->getId();
            }

            $query = $this->getEntityManager()->createQuery(
                'SELECT p
                FROM SkaphandrusAppBundle:SkPhoto p
                WHERE IDENTITY(p.fosUser) = :user_id
                AND p.id IN (:photo_ids)'
            )->setParameter('user_id', $user_id)
            ->setParameter('photo_ids', implode(',', $photo_ids));

            $photos[$category->getId()] = $query->getResult();
        }

        return $photos;
    }
    
        
//      public function findPhotosFromUserInContest($user_id, $contest_id) {
//          
//          $categories = $this->getEntityManager()->createQuery(
//            'SELECT cat
//            FROM SkaphandrusAppBundle:SkPhotoContestCategory cat
//            WHERE IDENTITY(cat.contest) = :contest_id'
//        )->setParameter('contest_id', $contest_id)->getResult();
//
//        $photos = array();
//        foreach ($categories as $category) {
//            $photo_ids = array();
//
//            foreach ($category->getPhoto() as $photo) {
//                $photo_ids[] = $photo->getId();
//            }
//
//            $query = $this->getEntityManager()->createQuery(
//                'SELECT p
//                FROM SkaphandrusAppBundle:SkPhoto p
//                WHERE IDENTITY(p.fosUser) = :user_id
//                AND p.id IN (:photo_ids)'
//            )->setParameter('user_id', $user_id)
//            ->setParameter('photo_ids', implode(',', $photo_ids));
//
//            $photos[$category->getId()] = $query->getResult();
//        }
//
//        return $photos;
//    }
    
}
