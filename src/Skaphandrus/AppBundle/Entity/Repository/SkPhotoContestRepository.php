<?php

namespace Skaphandrus\AppBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * SkPhotoContestRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SkPhotoContestRepository extends EntityRepository {

    public function getPhotographers($contest_id) {

        $em = $this->getEntityManager();
        $connection = $em->getConnection();

        $sql = "SELECT distinct f.id as id, count(p.id) as num_photos
                FROM fos_user as f
                JOIN sk_photo as p
                on f.id = p.fos_user_id
                JOIN sk_photo_contest_category_photo as cat_pho
                ON p.id = cat_pho.photo_id
                JOIN sk_photo_contest_category as cat
                ON cat_pho.category_id = cat.id
                where cat.contest_id = " . $contest_id . " 
                group by id
                order by num_photos desc";

        $statement = $connection->prepare($sql);
        $statement->execute();
        $values = $statement->fetchAll();
        $result = array();

        foreach ($values as $value) {
            $user = $em->getRepository('SkaphandrusAppBundle:FosUser')->find($value['id']);
            $user->setPhotosInContest($value['num_photos']);
            $result[] = $user;
        }

        return $result;
    }

    public function findPhotographers($contest) {

        $categories = $contest->getCategories();
        $users = array();

        foreach ($categories as $category) {
            foreach ($category->getPhoto() as $photo) {
                $user = $photo->getFosUser();

                if ($user && !array_key_exists($user->getId(), $users)) {
                    $users[$user->getId()] = $user;
                }
            }
        }

        return $users;
    }

    public function findPhotosFromUserNotAssociatedToContest($user_id, $contest_id) {

        $em = $this->getEntityManager();
        $connection = $em->getConnection();

        $sql = "SELECT *
                FROM sk_photo as p
                WHERE p.fos_user_id = " . $user_id . " 
                AND p.id NOT IN( 
                    SELECT photo_id 
                    FROM sk_photo_contest_category_photo 
                    WHERE category_id IN (
                        SELECT id 
                        FROM sk_photo_contest_category 
                        WHERE contest_id = " . $contest_id . "))
                ORDER BY id DESC";

        $statement = $connection->prepare($sql);
        $statement->execute();
        $values = $statement->fetchAll();
        $result = array();

        foreach ($values as $value) {
            $photo = new \Skaphandrus\AppBundle\Entity\SkPhoto();
            $photo->setId($value['id']);
            $photo->setTitle($value['title']);
            $photo->setImage($value['image']);
            $result[] = $photo;
        }

        return $result;
    }

    public function findPhotosFromUserInCategory($user_id, $category_id) {

        $em = $this->getEntityManager();
        $connection = $em->getConnection();

        $sql = "SELECT *
                FROM sk_photo
                JOIN sk_photo_contest_category_photo ON sk_photo.id = sk_photo_contest_category_photo.photo_id 
                WHERE sk_photo.fos_user_id = " . $user_id . " 
                AND sk_photo_contest_category_photo.category_id = " . $category_id . "
                ORDER BY sk_photo.id DESC";

        $statement = $connection->prepare($sql);
        $statement->execute();
        $values = $statement->fetchAll();
        $result = array();

        foreach ($values as $value) {
            $photo = new \Skaphandrus\AppBundle\Entity\SkPhoto();
            $photo->setId($value['id']);
            $photo->setTitle($value['title']);
            $photo->setImage($value['image']);
            $result[] = $photo;
        }

        return $result;
    }

    public function findPhotosFromUserInContest($user_id, $contest_id) {
        $categories = $this->getEntityManager()->createQuery(
                        'SELECT cat
            FROM SkaphandrusAppBundle:SkPhotoContestCategory cat
            WHERE IDENTITY(cat.contest) = :contest_id'
                )->setParameter('contest_id', $contest_id)->getResult();

        foreach ($categories as $category) {
            $photos[$category->getId()] = $this->findPhotosFromUserInCategory($user_id, $category->getId());
        }



        return $photos;
    }


}
