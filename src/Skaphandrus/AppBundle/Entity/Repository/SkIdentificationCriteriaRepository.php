<?php

namespace Skaphandrus\AppBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * SkIdentificationCriteriaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SkIdentificationCriteriaRepository extends EntityRepository {
    /**
     * Metodo que com base nas especies enviadas, devolve as os critérios e caracteres que fazem match.
     */
    public function getCriteriaIDSFromSpeciesIDS($species, $module_id=null) {
        $em = $this->getEntityManager();
        $connection = $em->getConnection();

        $sql = "SELECT distinct(criteria_id) 
            FROM sk_identification_criteria_matrix". ( ($module_id == null)? "" : "_". $module_id ) ." 
                where species_id in (" . implode(', ', $species) . ") ";

        $statement = $connection->prepare($sql);
        $statement->execute();
        $values = $statement->fetchAll();
        $result = array();

        foreach ($values as $value) {
            $result[] = $value['criteria_id'];
        }

        return $result;
    }

    /**
     * Metodo que com base no modulo, devolve os critérios que fazem match.
     */
    public function getCriteriaIDSFromModule($module) {

        $em = $this->getEntityManager();
        $connection = $em->getConnection();

        $sql = "SELECT distinct(criteria_id) 
            FROM sk_identification_criteria_matrix_". $module->getId() ." 
            where ";

        foreach ($module->getGroups() as $key => $group_obj) {
            $sql .= $group_obj->getTaxonName() ."_id = " . $group_obj->getTaxonValue()->getId();

            if ($key < count($module->getGroups()) - 1):
                $sql .= " or ";
            endif;
        }

        $statement = $connection->prepare($sql);
        $statement->execute();
        $values = $statement->fetchAll();
        $result = array();

        foreach ($values as $value) {
            $result[] = $value['criteria_id'];
        }

        return $result;
    }
}
