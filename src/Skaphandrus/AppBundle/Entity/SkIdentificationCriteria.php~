<?php

namespace Skaphandrus\AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Knp\DoctrineBehaviors\Model as ORMBehaviors;

/**
 * SkIdentificationCriteria
 */
class SkIdentificationCriteria
{

    use ORMBehaviors\Translatable\Translatable;
    
    /**
     * @var string
     */
    private $orderBy;

    /**
     * @var boolean
     */
    private $isCumulative = '1';

    /**
     * @var integer
     */
    private $id;

    /**
     * @var \Skaphandrus\AppBundle\Entity\SkIdentificationCriteriaType
     */
    private $type;

    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    private $groups;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->groups = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Set orderBy
     *
     * @param string $orderBy
     *
     * @return SkIdentificationCriteria
     */
    public function setOrderBy($orderBy)
    {
        $this->orderBy = $orderBy;

        return $this;
    }

    /**
     * Get orderBy
     *
     * @return string
     */
    public function getOrderBy()
    {
        return $this->orderBy;
    }

    /**
     * Set isCumulative
     *
     * @param boolean $isCumulative
     *
     * @return SkIdentificationCriteria
     */
    public function setIsCumulative($isCumulative)
    {
        $this->isCumulative = $isCumulative;

        return $this;
    }

    /**
     * Get isCumulative
     *
     * @return boolean
     */
    public function getIsCumulative()
    {
        return $this->isCumulative;
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set type
     *
     * @param \Skaphandrus\AppBundle\Entity\SkIdentificationCriteriaType $type
     *
     * @return SkIdentificationCriteria
     */
    public function setType(\Skaphandrus\AppBundle\Entity\SkIdentificationCriteriaType $type = null)
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Get type
     *
     * @return \Skaphandrus\AppBundle\Entity\SkIdentificationCriteriaType
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Add group
     *
     * @param \Skaphandrus\AppBundle\Entity\SkIdentificationGroup $group
     *
     * @return SkIdentificationCriteria
     */
    public function addGroup(\Skaphandrus\AppBundle\Entity\SkIdentificationGroup $group)
    {
        $this->groups[] = $group;

        return $this;
    }

    /**
     * Remove group
     *
     * @param \Skaphandrus\AppBundle\Entity\SkIdentificationGroup $group
     */
    public function removeGroup(\Skaphandrus\AppBundle\Entity\SkIdentificationGroup $group)
    {
        $this->groups->removeElement($group);
    }

    /**
     * Get groups
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGroups()
    {
        return $this->groups;
    }
    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    private $characters;


    /**
     * Add character
     *
     * @param \Skaphandrus\AppBundle\Entity\skIdentificationCharacter $character
     *
     * @return SkIdentificationCriteria
     */
    public function addCharacter(\Skaphandrus\AppBundle\Entity\skIdentificationCharacter $character)
    {
        $this->characters[] = $character;

        return $this;
    }

    /**
     * Remove character
     *
     * @param \Skaphandrus\AppBundle\Entity\skIdentificationCharacter $character
     */
    public function removeCharacter(\Skaphandrus\AppBundle\Entity\skIdentificationCharacter $character)
    {
        $this->characters->removeElement($character);
    }

    /**
     * Get characters
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getCharacters()
    {
        return $this->characters;
    }
}
