skaphandrus_app_notify_admin:
    resource: "@SkaphandrusAppBundle/Resources/config/routing/sksocialnotify.yml"
    prefix:   /{_locale}/notify_admin

#### Photos Species Validation and Sugestion Routes
skaphandrus_app_photo_species_validation_admin:
    resource: "@SkaphandrusAppBundle/Resources/config/routing/skphotospeciesvalidation.yml"
    prefix:   /{_locale}/photo_species_validation_admin

skaphandrus_app_photo_species_sugestion_admin:
    resource: "@SkaphandrusAppBundle/Resources/config/routing/skphotospeciessugestion.yml"
    prefix:   /{_locale}/photo_species_sugestion_admin



#### Identification Admin Routes
skaphandrus_app_identification_species_admin:
    resource: "@SkaphandrusAppBundle/Resources/config/routing/skidentificationspecies.yml"
    prefix:   /{_locale}/identification_species_admin

skaphandrus_app_identification_module_admin:
    resource: "@SkaphandrusAppBundle/Resources/config/routing/skidentificationmodule.yml"
    prefix:   /{_locale}/identification_module_admin

skaphandrus_app_identification_group_admin:
    resource: "@SkaphandrusAppBundle/Resources/config/routing/skidentificationgroup.yml"
    prefix:   /{_locale}/identification_group_admin

skaphandrus_app_identification_criteria_admin:
    resource: "@SkaphandrusAppBundle/Resources/config/routing/skidentificationcriteria.yml"
    prefix:   /{_locale}/identification_criteria_admin



#
#skaphandrus_app_fos_user:
#    resource: "@SkaphandrusAppBundle/Resources/config/routing/fosuser.yml"
#    prefix:   /{_locale}/fos_user
#


#### User Admin Routes
skaphandrus_app_spot_admin:
    resource: "@SkaphandrusAppBundle/Resources/config/routing/skspot.yml"
    prefix:   /{_locale}/spot_admin

skaphandrus_app_photo_admin:
    resource: "@SkaphandrusAppBundle/Resources/config/routing/skphoto.yml"
    prefix:   /{_locale}/photo_admin

skaphandrus_app_points_admin:
    resource: "@SkaphandrusAppBundle/Resources/config/routing/skpoints.yml"
    prefix:   /{_locale}/points_admin

skaphandrus_app_modules_admin:
    resource: "@SkaphandrusAppBundle/Resources/config/routing/skmodules.yml"
    prefix:   /{_locale}/modules_admin

skaphandrus_app_person_admin:
    resource: "@SkaphandrusAppBundle/Resources/config/routing/skperson.yml"
    prefix:   /{_locale}/person_admin

skaphandrus_app_settings_admin:
    resource: "@SkaphandrusAppBundle/Resources/config/routing/sksettings.yml"
    prefix:   /{_locale}/settings_admin

skaphandrus_app_profile_admin:
    resource: "@SkaphandrusAppBundle/Resources/config/routing/skprofile.yml"
    prefix:   /{_locale}/profile_admin






skaphandrus_app_hello:
    path:     /hello/{name}
    defaults: { _controller: SkaphandrusAppBundle:Default:hello }

skaphandrus_app_users_migration:
    path:     /migration/migration
    defaults: { _controller: SkaphandrusAppBundle:Default:usersMigration }

################################################################################  
### TRANSVERSAL
################################################################################    

#CONTROLLER DEFAULT    
#homepage_index:
#    path:     /index
#    defaults: { _controller: SkaphandrusAppBundle:Default:index }    
#




index:
    path:      /{_locale}
    defaults:  { _controller: SkaphandrusAppBundle:Default:index, _locale: en }
    requirements:
        _locale:  en|pt

modules:
    path:      /{_locale}/ocean-life-identification
    defaults:  { _controller: SkaphandrusAppBundle:Identification:modules, _locale: en }
    requirements:
        _locale:  en|pt

criterias:
    path:      /{_locale}/ocean-life-identification/{slug}
    defaults:  { _controller: SkaphandrusAppBundle:Identification:criterias, _locale: en }
    requirements:
        _locale:  en|pt



index2:
    path:      /{_locale}/index2
    defaults:  { _controller: SkaphandrusAppBundle:Default:index2, _locale: en }
    requirements:
        _locale:  en|pt

species:
    path:     /{_locale}/marine-species/info/species/{slug}
    defaults: { _controller: SkaphandrusAppBundle:Default:speciesPage, _locale: en }
    requirements:
        _locale:  en|pt

taxonomy:
    path:     /{_locale}/marine-species/taxonomy
    defaults: { _controller: SkaphandrusAppBundle:Default:taxonomy, locale: en }
    requirements:
        _locale:  en|pt

taxonomy_source:
    path:     /{_locale}/species/source
    defaults: { _controller: SkaphandrusAppBundle:Default:source, locale: en }
    requirements:
        _locale:  en|pt

taxon:
    path:     /{_locale}/marine-species/{node}/{slug}
    defaults: { _controller: SkaphandrusAppBundle:Default:taxon, _locale: en }
    requirements:
        _locale:  en|pt

spot:
    path:     /{_locale}/scuba-dive-locations/info/spot/{country}/{location}/{slug}
    defaults: { _controller: SkaphandrusAppBundle:Default:spot, _locale: en }
    requirements:
        _locale:  en|pt

location:
    path:     /{_locale}/scuba-dive-locations/info/location/{country}/{slug}
    defaults: { _controller: SkaphandrusAppBundle:Default:location, _locale: en }
    requirements:
        _locale:  en|pt

country:
    path:     /{_locale}/scuba-dive-locations/info/country/{slug}
    defaults: { _controller: SkaphandrusAppBundle:Default:country, _locale: en }
    requirements:
        _locale:  en|pt

locations_home:
    path:     /{_locale}/scuba-dive-locations
    defaults: { _controller: SkaphandrusAppBundle:Default:locationsHome, _locale: en }
    requirements:
        _locale:  en|pt

photo:
    path:     /{_locale}/underwater-photography/photo/{id}-{slug}
    defaults: { _controller: SkaphandrusAppBundle:Default:photo, _locale: en }
    requirements:
        _locale:  en|pt

photos:
    path:     /{_locale}/underwater-photography/photos
    defaults: { _controller: SkaphandrusAppBundle:Default:photos, _locale: en }
    requirements:
        _locale:  en|pt

user:
    path:     /{_locale}/users/username/{id}
    defaults: { _controller: SkaphandrusAppBundle:Default:user, _locale: en }
    requirements:
        _locale:  en|pt

search:
    path:     /{_locale}/search-results
    defaults: { _controller: SkaphandrusAppBundle:Default:search, _locale: en }
    requirements:
        _locale:  en|pt


##################################################################################
#### CONTROLLER CONTESTS

contests_landing_page:
    path:     /{_locale}/underwater-photo-contest
    defaults: { _controller: SkaphandrusAppBundle:Contest:landing, _locale: en }
    requirements:
        _locale:  en|pt

contests_photos:
    path:     /{_locale}/underwater-photo-contest/photos/{contest_slug}/{category_slug}
    defaults: { _controller: SkaphandrusAppBundle:Contest:photos, _locale: en }
    requirements:
        _locale:  en|pt

contest_participate:
    path:     /{_locale}/underwater-photo-contest/participate/{contest_id}
    defaults: { _controller: SkaphandrusAppBundle:Contest:participate, _locale: en }
    requirements:
        _locale:  en|pt

contest_add_photo:
    path:     /{_locale}/category/{category_id}/add-photo/{photo_id}
    defaults: { _controller: SkaphandrusAppBundle:Contest:addPhoto, _locale: en }
    requirements:
        _locale:  en|pt

contest_remove_photo:
    path:     /{_locale}/category/{category_id}/remove-photo/{photo_id}
    defaults: { _controller: SkaphandrusAppBundle:Contest:removePhoto, _locale: en }
    requirements:
        _locale:  en|pt

contest_vote_photo:
    path:     /{_locale}/category/{category_id}/vote-photo/{photo_id}
    defaults: { _controller: SkaphandrusAppBundle:Contest:votePhoto, _locale: en }
    requirements:
        _locale:  en|pt

contests_photographers:
    path:     /{_locale}/underwater-photo-contest/photographers/{contest_slug}
    defaults: { _controller: SkaphandrusAppBundle:Contest:photographers, _locale: en }
    requirements:
        _locale:  en|pt

contests_sponsors:
    path:     /{_locale}/underwater-photo-contest/sponsors/{contest_slug}
    defaults: { _controller: SkaphandrusAppBundle:Contest:sponsors, _locale: en }
    requirements:
        _locale:  en|pt

contests_contest:
    path:     /{_locale}/underwater-photo-contest/{slug}
    defaults: { _controller: SkaphandrusAppBundle:Contest:contest, _locale: en }
    requirements:
        _locale:  en|pt


##################################################################################
#### CONTROLLER IDENTIFICATION APP

identification_criterias:
    path:     /{_locale}/app/criterias.{_format}
    defaults: { _controller: SkaphandrusAppBundle:Identification:criteriasListJson, _locale: en }
    requirements:
        _format: json

identification_species:
    path:     /{_locale}/app/species.{_format}
    defaults: { _controller: SkaphandrusAppBundle:Identification:speciesListJson, _locale: en }
    requirements:
        _format: json

identification_modules_list:
    path:     /{_locale}/app/modules.{_format}
    defaults: { _controller: SkaphandrusAppBundle:Identification:modulesListJson, _locale: en }
    requirements:
        _format: json

identification_species_info:
    path:     /{_locale}/app/speciesinfo.{_format}
    defaults: { _controller: SkaphandrusAppBundle:Identification:speciesInfoJson, _locale: en }
    requirements:
        _format: json

identification_taxons:
    path:     /{_locale}/app/taxons.{_format}
    defaults: { _controller: SkaphandrusAppBundle:Identification:taxonListJson, _locale: en }

# identification_tests:
#     path:     /{_locale}/app/tests
#     defaults: { _controller: SkaphandrusAppBundle:Identification:tests, _locale: en }

##################################################################################
#### AUTOCOMPLETE AJAX ROUTES

ajax_search_photo_machine_model:
    path:     /{_locale}/ajax_search_photo_machine_model/
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxSearchPhotoMachineModel }

ajax_search_species:
    path:     /{_locale}/ajax_search_species/
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxSearchSpecies }

ajax_search_family:
    path:     /{_locale}/ajax_search_family/
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxSearchFamily }

ajax_search_genus:
    path:     /{_locale}/ajax_search_genus/
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxSearchGenus }

ajax_search_order:
    path:     /{_locale}/ajax_search_order/
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxSearchOrder }

ajax_search_class:
    path:     /{_locale}/ajax_search_class/
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxSearchClass }

ajax_search_phylum:
    path:     /{_locale}/ajax_search_phylum/
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxSearchPhylum }

ajax_search_spot:
    path:     /{_locale}/ajax_search_spot/
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxSearchSpot }


ajax_search_location:
    path:     /{_locale}/ajax_search_location/
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxSearchLocation }

ajax_search_fosUser:
    path:     /{_locale}/ajax_search_fosUser/
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxSearchFosUser }


## gets

ajax_get_photo_machine_model:
    path:     /{_locale}/ajax_get_photo_machine_model/{id}
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxGetPhotoMachineModel }

ajax_get_species:
    path:     /{_locale}/ajax_get_species/{id}
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxGetSpecies }

ajax_get_genus:
    path:     /{_locale}/ajax_get_genus/{id}
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxGetGenus }

ajax_get_family:
    path:     /{_locale}/ajax_get_family/{id}
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxGetFamily }

ajax_get_order:
    path:     /{_locale}/ajax_get_order/{id}
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxGetOrder }

ajax_get_class:
    path:     /{_locale}/ajax_get_class/{id}
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxGetClass }

ajax_get_phylum:
    path:     /{_locale}/ajax_get_phylum/{id}
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxGetPhylum }

ajax_get_spot:
    path:     /{_locale}/ajax_get_spot/{id}
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxGetSpot }
    
ajax_get_location:
    path:     /{_locale}/ajax_get_location/{id}
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxGetLocation }
    
ajax_get_fosUser:
    path:     /{_locale}/ajax_get_fosUser/{id}
    defaults: { _controller: SkaphandrusAppBundle:AjaxSearch:ajaxGetFosUser }


#
#################################################################################  
#### FUN CONTESTS
#################################################################################
# 
#contest_about:
#  url:   /:sf_culture/underwater-photo-contest/about/:slug/*
#  param: { module: photoContest, action: contestAbout }
#
#contest_results:
#  url:   /:sf_culture/underwater-photo-contest/results/:slug/*
#  param: { module: photoContest, action: contestResults }
#
################################################################################
#### APP OCEAN LIFE ID
################################################################################
#
#identification_criterias:
#  url:   /:sf_culture/app/criterias.:sf_format
#  param: { module: identification, action: jsonCriteriasList}
#  requirements:
#    sf_method: [post,put]
#    sf_format: (?:xml|json)
#
#identification_species:
#  url:   /:sf_culture/app/species.:sf_format
#  param: { module: identification, action: jsonSpeciesList}
#  requirements:
#    sf_method: [post,put]
#    sf_format: (?:xml|json)
#
#identification_modules:
#  url:   /:sf_culture/app/modules.:sf_format
#  param: { module: identification, action: jsonModulesList}
#  requirements:
#    sf_method: [post,put]
#    sf_format: (?:xml|json)
#
#identification_species_info:
#  url:   /:sf_culture/app/speciesinfo.:sf_format
#  param: { module: identification, action: jsonSpeciesInfo}
#  requirements:
#    sf_method: [post,put]
#    sf_format: (?:xml|json)
#    
#identification_taxons:
#  url:   /:sf_culture/app/taxons.:sf_format
#  param: { module: identification, action: jsonTaxonsList}
#  requirements:
#    sf_method: [post,put]
#    sf_format: (?:xml|json)
#    
#identification_array:
#  url:   /:sf_culture/app/array.:sf_format
#  param: { module: identification, action: jsonArray}
#  requirements:
#    sf_method: [post,put]
#    sf_format: (?:xml|json)    
#
#
#


