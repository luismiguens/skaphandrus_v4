{% extends '@SkaphandrusAppBundle/Resources/views/content_layout.html.twig' %}

{#-----variaveis auxiliares-----#}
{% set title = "" %}
{% set content = "" %}

{#-----title-----#}
{#-----fosuser-----#}
{% if (params.fosUser is defined) and (params.fosUser is not empty) %}

{# #}{% set content %}{% trans with { '%user%': objs.fosUser} %} page.photos.keyword.fosUser {% endtrans %}{% endset %}

{% endif %}

{#-----spots-----#}
{% if (params.spot is defined) and (params.spot is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%spot%': objs.spot.name~", "~objs.spot.location.name~", "~objs.spot.location.region.country} %} page.photos.keyword.spot {% endtrans %}{% endset %}

{% elseif (params.spotName is defined) and (params.spotName is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%spot%': objs.spot.name~", "~objs.spot.location.name~", "~objs.spot.location.region.country} %} page.photos.keyword.spot {% endtrans %}{% endset %}

{% elseif (params.location is defined) and (params.location is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%location%': objs.spot.location.name~", "~objs.spot.location.region.name~", "~objs.spot.location.region.country} %} page.photos.keyword.location {% endtrans %}{% endset %}

{% elseif (params.region is defined) and (params.region is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%region%': objs.spot.location.region.name~", "~objs.spot.location.region.country} %} page.photos.keyword.region {% endtrans %}{% endset %}

{% elseif (params.country is defined) and (params.country is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%country%': objs.spot.location.region.country} %} page.photos.keyword.country {% endtrans %}{% endset %}

{% elseif (params.countryName is defined) and (params.countryName is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%country%': objs.spot.location.region.country} %} page.photos.keyword.country {% endtrans %}{% endset %}

{% endif %}

{#-----marine animals-----#}
{% if (params.vernacular is defined) and (params.vernacular is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%vernacular%': params.vernacular} %} page.photos.keyword.vernacular {% endtrans %}{% endset %}

{% elseif (params.species is defined) and (params.species is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%species%': objs.species.name} %} page.photos.keyword.species {% endtrans %}{% endset %}

{% elseif (params.genus is defined) and (params.genus is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%genus%': objs.species.genus.name} %} page.photos.keyword.genus {% endtrans %}{% endset %}

{% elseif (params.family is defined) and (params.family is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%family%': objs.species.genus.family.name} %} page.photos.keyword.family {% endtrans %}{% endset %}

{% elseif (params.order is defined) and (params.order is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%order%': objs.species.genus.family.order.name} %} page.photos.keyword.order {% endtrans %}{% endset %}

{% elseif (params.class is defined) and (params.class is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%class%': objs.species.genus.family.order.class.name} %} page.photos.keyword.class {% endtrans %}{% endset %}

{% elseif (params.phylum is defined) and (params.phylum is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%phylum%': objs.species.genus.family.order.class.phylum.name} %} page.photos.keyword.phylum {% endtrans %}{% endset %}

{% elseif (params.kingdom is defined) and (params.kingdom is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%kingdom%': objs.species.genus.family.order.class.phylum.kingdom.name} %} page.photos.keyword.kingdom {% endtrans %}{% endset %}

{% endif %}

{#-----someting else-----#}
{% if content is empty %}
    {#{% set title = ("page.photos_something_else.meta_tag.title"|trans) %}#}
{# #}{% set title %}{% trans with {'%sort%': sort } %} page.photos_something_else.meta_tag.title {% endtrans %}{% endset %}
{% else %}

{# #}{% set title %}{% trans with {'%sort%': sort, '%content%': content } %} page.photos.meta_tag.title {% endtrans %}{% endset %}

{% endif %}

{% block page_title %}{{title}}{% endblock %}
{#-----title-----#}

{% block hreflang %}
    <link rel="alternate" hreflang="pt" href="{{ app.request.getSchemeAndHttpHost() ~ path('photos', {'locale': 'pt'}) }}" />
    <link rel="alternate" hreflang="en" href="{{ app.request.getSchemeAndHttpHost() ~ path('photos', {'locale': 'en'}) }}" />
{% endblock %}


{#-----description-----#}
{#-----fosuser-----#}
{% if (params.fosUser is defined) and (params.fosUser is not empty) %}

{# #}{% set content %}{% trans with { '%user%': objs.fosUser} %} page.photos.keyword.fosUser {% endtrans %}{% endset %}

{% endif %}

{#-----spots-----#}
{% if (params.spot is defined) and (params.spot is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%spot%': objs.spot.name~", "~objs.spot.location.name~", "~objs.spot.location.region.country} %} page.photos.keyword.spot {% endtrans %}{% endset %}

{% elseif (params.spotName is defined) and (params.spotName is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%spot%': objs.spot.name~", "~objs.spot.location.name~", "~objs.spot.location.region.country} %} page.photos.keyword.spot {% endtrans %}{% endset %}

{% elseif (params.location is defined) and (params.location is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%location%': objs.spot.location.name~", "~objs.spot.location.region.name~", "~objs.spot.location.region.country} %} page.photos.keyword.location {% endtrans %}{% endset %}

{% elseif (params.region is defined) and (params.region is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%region%': objs.spot.location.region.name~", "~objs.spot.location.region.country} %} page.photos.keyword.region {% endtrans %}{% endset %}

{% elseif (params.country is defined) and (params.country is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%country%': objs.spot.location.region.country} %} page.photos.keyword.country {% endtrans %}{% endset %}

{% elseif (params.countryName is defined) and (params.countryName is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%country%': objs.spot.location.region.country} %} page.photos.keyword.country {% endtrans %}{% endset %}

{% endif %}

{#-----marine animals-----#}
{% if (params.vernacular is defined) and (params.vernacular is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%vernacular%': params.vernacular} %} page.photos.keyword.vernacular {% endtrans %}{% endset %}

{% elseif (params.species is defined) and (params.species is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%species%': objs.species.name} %} page.photos.keyword.species {% endtrans %}{% endset %}

{% elseif (params.genus is defined) and (params.genus is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%genus%': objs.species.genus.name} %} page.photos.keyword.genus {% endtrans %}{% endset %}

{% elseif (params.family is defined) and (params.family is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%family%': objs.species.genus.family.name} %} page.photos.keyword.family {% endtrans %}{% endset %}

{% elseif (params.order is defined) and (params.order is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%order%': objs.species.genus.family.order.name} %} page.photos.keyword.order {% endtrans %}{% endset %}

{% elseif (params.class is defined) and (params.class is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%class%': objs.species.genus.family.order.class.name} %} page.photos.keyword.class {% endtrans %}{% endset %}

{% elseif (params.phylum is defined) and (params.phylum is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%phylum%': objs.species.genus.family.order.class.phylum.name} %} page.photos.keyword.phylum {% endtrans %}{% endset %}

{% elseif (params.kingdom is defined) and (params.kingdom is not empty) %}

{# #}{% set content %}{{content}} {% trans with { '%kingdom%': objs.species.genus.family.order.class.phylum.kingdom.name} %} page.photos.keyword.kingdom {% endtrans %}{% endset %}

{% endif %}

{#-----someting else-----#}
{% if content is empty %}
    {% set description = ("page.photos_something_else.meta_tag.description"|trans) %}
{% else %}

{# #}{% set description %}{% trans with {'%content%': content } %} page.photos.meta_tag.description {% endtrans %}{% endset %}

{% endif %}

{% block page_description %}{{description}}{% endblock %}
{#-----description-----#}


{#-----keywords-----#}
{% set keywords = ("meta_tag.keyword.pictures"|trans)%}
{% set keywords = keywords~', '~("meta_tag.keyword.images"|trans)%}
{% set keywords = keywords~', '~("meta_tag.keyword.photos"|trans)%}
{% set keywords = keywords~', '~("meta_tag.keyword.photography"|trans)%}
{% set keywords = keywords~', '~("meta_tag.keyword.underwater"|trans)%}

{#-----fosuser-----#}
{% if (params.fosUser is defined) and (params.fosUser is not empty) %}
    {% set keywords = keywords~', '~("meta_tag.keyword.fosUser"|trans)~' '~objs.fosUser %}
{% endif %}

{#-----spots-----#}
{% if (params.spot is defined) and (params.spot is not empty) %}
    {% set keywords = keywords~', '~("meta_tag.keyword.spot"|trans)~' '~objs.spot.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.location"|trans)~' '~objs.spot.location.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.region"|trans)~' '~objs.spot.location.region.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.country"|trans)~' '~objs.spot.location.region.country %}
{% elseif (params.spotName is defined) and (params.spotName is not empty) %}
    {% set keywords = keywords~', '~("meta_tag.keyword.spot"|trans)~' '~objs.spot.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.location"|trans)~' '~objs.spot.location.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.region"|trans)~' '~objs.spot.location.region.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.country"|trans)~' '~objs.spot.location.region.country %}
{% elseif (params.location is defined) and (params.location is not empty) %}
    {% set keywords = keywords~', '~("meta_tag.keyword.location"|trans)~' '~objs.spot.location.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.region"|trans)~' '~objs.spot.location.region.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.country"|trans)~' '~objs.spot.location.region.country %}
{% elseif (params.region is defined) and (params.region is not empty) %}
    {% set keywords = keywords~', '~("meta_tag.keyword.region"|trans)~' '~objs.spot.location.region.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.country"|trans)~' '~objs.spot.location.region.country %}
{% elseif (params.country is defined) and (params.country is not empty) %}
    {% set keywords = keywords~', '~("meta_tag.keyword.country"|trans)~' '~objs.spot.location.region.country %}
{% elseif (params.countryName is defined) and (params.countryName is not empty) %}
    {% set keywords = keywords~', '~("meta_tag.keyword.country"|trans)~' '~objs.spot.location.region.country %}
{% endif %}

{#-----marine animals-----#}
{% if (params.vernacular is defined) and (params.vernacular is not empty) %}
    {% set keywords = keywords~', '~("meta_tag.keyword.vernacular"|trans)~' '~params.vernacular %}
{% elseif (params.species is defined) and (params.species is not empty) %}
    {% set keywords = keywords~', '~("meta_tag.keyword.species"|trans)~' '~objs.species.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.genus"|trans)~' '~objs.species.genus.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.family"|trans)~' '~objs.species.genus.family.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.order"|trans)~' '~objs.species.genus.family.order.name %}
{% elseif (params.genus is defined) and (params.genus is not empty) %}
    {% set keywords = keywords~', '~("meta_tag.keyword.genus"|trans)~' '~objs.species.genus.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.family"|trans)~' '~objs.species.genus.family.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.order"|trans)~' '~objs.species.genus.family.order.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.class"|trans)~' '~objs.species.genus.family.order.class.name %}
{% elseif (params.family is defined) and (params.family is not empty) %}
    {% set keywords = keywords~', '~("meta_tag.keyword.family"|trans)~' '~objs.species.genus.family.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.order"|trans)~' '~objs.species.genus.family.order.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.class"|trans)~' '~objs.species.genus.family.order.class.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.phylum"|trans)~' '~objs.species.genus.family.order.class.phylum.name %}
{% elseif (params.order is defined) and (params.order is not empty) %}
    {% set keywords = keywords~', '~("meta_tag.keyword.order"|trans)~' '~objs.species.genus.family.order.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.class"|trans)~' '~objs.species.genus.family.order.class.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.phylum"|trans)~' '~objs.species.genus.family.order.class.phylum.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.kingdom"|trans)~' '~objs.species.genus.family.order.class.phylum.kingdom.name %}
{% elseif (params.class is defined) and (params.class is not empty) %}
    {% set keywords = keywords~', '~("meta_tag.keyword.class"|trans)~' '~objs.species.genus.family.order.class.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.phylum"|trans)~' '~objs.species.genus.family.order.class.phylum.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.kingdom"|trans)~' '~objs.species.genus.family.order.class.phylum.kingdom.name %}
{% elseif (params.phylum is defined) and (params.phylum is not empty) %}
    {% set keywords = keywords~', '~("meta_tag.keyword.phylum"|trans)~' '~objs.species.genus.family.order.class.phylum.name %}
    {% set keywords = keywords~', '~("meta_tag.keyword.kingdom"|trans)~' '~objs.species.genus.family.order.class.phylum.kingdom.name %}
{% elseif (params.kingdom is defined) and (params.kingdom is not empty) %}
    {% set keywords = keywords~', '~("meta_tag.keyword.kingdom"|trans)~' '~objs.species.genus.family.order.class.phylum.kingdom.name %}
{% endif %}

{#-----someting else-----#}
{% if params is empty %}
    {% set keywords = ("meta_tag.keyword.pictures"|trans)%}
    {% set keywords = keywords~', '~("meta_tag.keyword.images"|trans)%}
    {% set keywords = keywords~', '~("meta_tag.keyword.photos"|trans)%}
    {% set keywords = keywords~', '~("meta_tag.keyword.photography"|trans)%}
    {% set keywords = keywords~', '~("meta_tag.keyword.underwater"|trans)%}
    {% set keywords = keywords~', '~("meta_tag.keyword.portrait"|trans)%}
    {% set keywords = keywords~', '~("meta_tag.keyword.sea"|trans)%}
    {% set keywords = keywords~', '~("meta_tag.keyword.ocean"|trans)%}
    {% set keywords = keywords~', '~("meta_tag.keyword.marine"|trans)%}
{% endif %}

{% block page_keywords %}{{keywords}}{% endblock %}
{#-----keywords-----#}

{#<!----heading_title----->
{% if (params.vernacular is defined) and (params.vernacular is not empty) %}
{% set heading_title %}{% trans with {'%value%': params.vernacular} %} page.photos.h2.heading_title {% endtrans %}{% endset %}
{% elseif (params.species is defined) and (params.species is not empty) %}
{% set heading_title %}{% trans with {'%value%': objs.species.name} %} page.photos.h2.heading_title {% endtrans %}{% endset %}
{% elseif (params.genus is defined) and (params.genus is not empty) %}
{% set heading_title %}{% trans with {'%value%': objs.species.genus.name} %} page.photos.h2.heading_title {% endtrans %}{% endset %}    
{% elseif (params.family is defined) and (params.family is not empty) %}
{% set heading_title %}{% trans with {'%value%': objs.species.genus.family.name} %} page.photos.h2.heading_title {% endtrans %}{% endset %}
{% elseif (params.order is defined) and (params.order is not empty) %}
{% set heading_title %}{% trans with {'%value%': objs.species.genus.family.order.name} %} page.photos.h2.heading_title {% endtrans %}{% endset %}
{% elseif (params.class is defined) and (params.class is not empty) %}
{% set heading_title %}{% trans with {'%value%': objs.species.genus.family.order.class.name} %} page.photos.h2.heading_title {% endtrans %}{% endset %}
{% elseif (params.phylum is defined) and (params.phylum is not empty) %}
{% set heading_title %}{% trans with {'%value%': objs.species.genus.family.order.class.phylum.name} %} page.photos.h2.heading_title {% endtrans %}{% endset %}
{% elseif (params.kingdom is defined) and (params.kingdom is not empty) %}
{% set heading_title %}{% trans with {'%value%': objs.species.genus.family.order.class.phylum.kingdom.name} %} page.photos.h2.heading_title {% endtrans %}{% endset %}

<!-----spots----->
{% elseif (params.spot is defined) and (params.spot is not empty) %}
{% set heading_title %}{% trans with {'%value%': objs.spot.name~", "~objs.spot.location.name~", "~objs.spot.location.region.country} %} page.photos.h2.heading_title {% endtrans %}{% endset %}
{% elseif (params.location is defined) and (params.location is not empty) %}
{% set heading_title %}{% trans with {'%value%': objs.spot.location.name~", "~objs.spot.location.region.name~", "~objs.spot.location.region.country} %} page.photos.h2.heading_title {% endtrans %}{% endset %}    
{% elseif (params.region is defined) and (params.region is not empty) %}
{% set heading_title %}{% trans with {'%value%': objs.spot.location.region.name~", "~objs.spot.location.region.country} %} page.photos.h2.heading_title {% endtrans %}{% endset %}    
{% elseif (params.country is defined) and (params.country is not empty) %}
{% set heading_title %}{% trans with {'%value%': objs.spot.location.region.country} %} page.photos.h2.heading_title {% endtrans %}{% endset %}

<!-----fosuser----->
{% elseif (params.fosUser is defined) and (params.fosUser is not empty) %}
{% set heading_title %}{% trans with {'%value%': objs.fosUser} %} page.photos.h2.heading_title {% endtrans %}{% endset %}

<!-----someting else----->
{% else %}
    {% set heading_title = ("page.photos_something_else.h2.heading_title"|trans) %}
{% endif %}#}

{% block heading_title %}{#{{heading_title}}#}{{title}}{% endblock %}

{#-----breadcrumb-----#}
{% block heading_breadcrumbs %}
    <ol class="breadcrumb" itemprop="breadcrumb" itemscope itemtype="http://schema.org/BreadcrumbList">
        <li itemprop="itemListElement"><a href="{{ path('index') }}">{{ "breadcrumb.home"|trans }}</a></li>

        {% if (params.vernacular is defined) and (params.vernacular is not empty) %}
            <li itemprop="itemListElement" class="active"><strong>{{ params.vernacular}} </strong></li>

        {% elseif (params.species is defined) and (params.species is not empty) %}

            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'order': objs.species.genus.family.order.id}) }}">{{objs.species.genus.family.order.name}}</a></li>
            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'family': objs.species.genus.family.id}) }}">{{objs.species.genus.family.name}}</a></li>
            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'genus': objs.species.genus.id}) }}">{{objs.species.genus.name}}</a></li>
            <li itemprop="itemListElement" class="active"><strong>{{ objs.species.name}} </strong></li>

        {% elseif (params.genus is defined) and (params.genus is not empty) %}

            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'class': objs.species.genus.family.order.class.id}) }}">{{objs.species.genus.family.order.class.name}}</a></li>
            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'order': objs.species.genus.family.order.id}) }}">{{objs.species.genus.family.order.name}}</a></li>
            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'family': objs.species.genus.family.id}) }}">{{objs.species.genus.family.name}}</a></li>
            <li itemprop="itemListElement" class="active"><strong>{{ objs.species.genus.name}} </strong></li>

        {% elseif (params.family is defined) and (params.family is not empty) %}

            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'phylum': objs.species.genus.family.order.class.phylum.id}) }}">{{objs.species.genus.family.order.class.phylum.name}}</a></li>
            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'class': objs.species.genus.family.order.class.id}) }}">{{objs.species.genus.family.order.class.name}}</a></li>
            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'order': objs.species.genus.family.order.id}) }}">{{objs.species.genus.family.order.name}}</a></li>
            <li itemprop="itemListElement" class="active"><strong>{{ objs.species.genus.family.name}} </strong></li>

        {% elseif (params.order is defined) and (params.order is not empty) %}

            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'kingdom': objs.species.genus.family.order.class.phylum.kingdom.id}) }}">{{objs.species.genus.family.order.class.phylum.kingdom.name}}</a></li>
            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'phylum': objs.species.genus.family.order.class.phylum.id}) }}">{{objs.species.genus.family.order.class.phylum.name}}</a></li>
            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'class': objs.species.genus.family.order.class.id}) }}">{{objs.species.genus.family.order.class.name}}</a></li>
            <li itemprop="itemListElement" class="active"><strong>{{ objs.species.genus.family.order.name}} </strong></li>

        {% elseif (params.class is defined) and (params.class is not empty) %}

            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'kingdom': objs.species.genus.family.order.class.phylum.kingdom.id}) }}">{{objs.species.genus.family.order.class.phylum.kingdom.name}}</a></li>
            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'phylum': objs.species.genus.family.order.class.phylum.id}) }}">{{objs.species.genus.family.order.class.phylum.name}}</a></li>
            <li itemprop="itemListElement" class="active"><strong>{{ objs.species.genus.family.order.class.name}} </strong></li>

        {% elseif (params.phylum is defined) and (params.phylum is not empty) %}

            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'kingdom': objs.species.genus.family.order.class.phylum.kingdom.id}) }}">{{objs.species.genus.family.order.class.phylum.kingdom.name}}</a></li>
            <li itemprop="itemListElement" class="active"><strong>{{ objs.species.genus.family.order.class.phylum.name}} </strong></li>

        {% elseif (params.kingdom is defined) and (params.kingdom is not empty) %}

            <li itemprop="itemListElement" class="active"><strong>{{ objs.species.genus.family.order.class.phylum.kingdom.name}} </strong></li>

            <!-- spots-->
        {% elseif (params.spot is defined) and (params.spot is not empty) %}

            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'country': objs.spot.location.region.country.id}) }}">{{objs.spot.location.region.country}}</a></li>
            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'region': objs.spot.location.region.id}) }}">{{objs.spot.location.region.name}}</a></li>
            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'location': objs.spot.location.id}) }}">{{objs.spot.location.name}}</a></li>
            <li itemprop="itemListElement" class="active"><strong>{{ objs.spot.name}} </strong></li>

        {% elseif (params.location is defined) and (params.location is not empty) %}

            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'country': objs.spot.location.region.country.id}) }}">{{objs.spot.location.region.country}}</a></li>
            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'region': objs.spot.location.region.id}) }}">{{objs.spot.location.region.name}}</a></li>
            <li itemprop="itemListElement" class="active"><strong>{{ objs.spot.location.name}} </strong></li>

        {% elseif (params.region is defined) and (params.region is not empty) %}

            <li itemprop="itemListElement"><a href="{{ url_to_photos( {'country': objs.spot.location.region.country.id}) }}">{{objs.spot.location.region.country}}</a></li>
            <li itemprop="itemListElement" class="active"><strong>{{ objs.spot.location.region.name}} </strong></li>

        {% elseif (params.country is defined) and (params.country is not empty) %}
            <li itemprop="itemListElement" class="active"><strong>{{ objs.spot.location.region.country}} </strong></li>

            <!-- fosUser -->
        {% elseif (params.fosUser is defined) and (params.fosUser is not empty) %}

            <li itemprop="itemListElement" class="active"><strong>{{ objs.fosUser}} </strong></li>

        {% else %}

            <li itemprop="itemListElement" class="active"><strong>{{ "breadcrumb.photos"|trans }}  </strong></li>

        {% endif %}
    </ol>
{% endblock %}


{% block heading_action %}
    <a href="{{ path('photo_admin_new') }}" class="btn btn-primary">{{ "form.photo.btn.add"|trans }}</a>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('bundles/skaphandrusapp/js/jquery-ui-1.10.4.min.js') }}"></script>
    <script src="{{ asset('bundles/skaphandrusapp/js/hack/autocompleter-jqueryui.js') }}"></script>
    <script src="{{ asset('bundles/skaphandrusapp/js/isotope.pkgd.min.js') }}"></script>
    <script src="{{ asset('bundles/skaphandrusapp/js/imagesloaded.pkgd.min.js') }}"></script>

    <script type="text/javascript">

        var $grid = $('.gallery').imagesLoaded(function () {
            // init Isotope after all images have loaded
            $grid.isotope({
                // options
                itemSelector: '.grid-item-gallery',
                layoutMode: 'masonry'
            });
        });

        {#        function clearFields() {
                    var fosUser = document.forms["skaphandrus_filter_gallery"]["fakeskaphandrus_filter_gallery[fosUser]"].value;
                    var location = document.forms["skaphandrus_filter_gallery"]["fakeskaphandrus_filter_gallery[location]"].value;
                    var region = document.forms["skaphandrus_filter_gallery"]["fakeskaphandrus_filter_gallery[region]"].value;
                    var species = document.forms["skaphandrus_filter_gallery"]["fakeskaphandrus_filter_gallery[species]"].value;
                    var genus = document.forms["skaphandrus_filter_gallery"]["fakeskaphandrus_filter_gallery[genus]"].value;
                    var family = document.forms["skaphandrus_filter_gallery"]["fakeskaphandrus_filter_gallery[family]"].value;
                    var order = document.forms["skaphandrus_filter_gallery"]["fakeskaphandrus_filter_gallery[order]"].value;
                    var classField = document.forms["skaphandrus_filter_gallery"]["fakeskaphandrus_filter_gallery[class]"].value;
                    var phylum = document.forms["skaphandrus_filter_gallery"]["fakeskaphandrus_filter_gallery[phylum]"].value;
                    var kingdom = document.forms["skaphandrus_filter_gallery"]["fakeskaphandrus_filter_gallery[kingdom]"].value;

                    if (fosUser.length == 0) {
                        document.forms["skaphandrus_filter_gallery"]["skaphandrus_filter_gallery[fosUser]"].value = "";
                    }
                    if (location.length == 0) {
                        document.forms["skaphandrus_filter_gallery"]["skaphandrus_filter_gallery[location]"].value = "";
                    }
                    if (region.length == 0) {
                        document.forms["skaphandrus_filter_gallery"]["skaphandrus_filter_gallery[region]"].value = "";
                    }
                    if (species.length == 0) {
                        document.forms["skaphandrus_filter_gallery"]["skaphandrus_filter_gallery[species]"].value = "";
                    }
                    if (genus.length == 0) {
                        document.forms["skaphandrus_filter_gallery"]["skaphandrus_filter_gallery[genus]"].value = "";
                    }
                    if (family.length == 0) {
                        document.forms["skaphandrus_filter_gallery"]["skaphandrus_filter_gallery[family]"].value = "";
                    }
                    if (order.length == 0) {
                        document.forms["skaphandrus_filter_gallery"]["skaphandrus_filter_gallery[order]"].value = "";
                    }
                    if (classField.length == 0) {
                        document.forms["skaphandrus_filter_gallery"]["skaphandrus_filter_gallery[class]"].value = "";
                    }
                    if (phylum.length == 0) {
                        document.forms["skaphandrus_filter_gallery"]["skaphandrus_filter_gallery[phylum]"].value = "";
                    }
                    if (kingdom.length == 0) {
                        document.forms["skaphandrus_filter_gallery"]["skaphandrus_filter_gallery[kingdom]"].value = "";
                    }
                }#}

    </script>

{% endblock %}


{% block stylesheets %}
    {{ parent() }}
    <link href="https://code.jquery.com/ui/1.10.2/themes/smoothness/jquery-ui.css" rel="Stylesheet" />
    <link href="{{ asset('bundles/skaphandrusapp/css/plugins/jQueryUI/jquery-ui-1.10.4.custom.min.css') }}" rel="stylesheet">
    <style type="text/css">
        .ui-autocomplete-loading {
            background: white url("http://jqueryui.com/resources/demos/autocomplete/images/ui-anim_basic_16x16.gif") right center no-repeat;
        }
    </style>
    {#<style type="text/css">
        .grid-item-gallery{width: 25%}
    </style>#}
{% endblock %}




{% block body %}
    <div class="wrapper wrapper-content" itemscope itemtype="http://schema.org/ImageGallery">
        <div class="container">

            <div class="row">
                <div class="col-md-12">
                    <div class="ibox">
                        <div class="ibox-content">
                            <h1>{{title}}</h1>

                            {#<!-----h1 title----->
                            {% if (params.vernacular is defined) and (params.vernacular is not empty) %}
                                <h1>{% trans with {'%type%': "page.photos.keyword.vernacular"|trans, '%value%': params.vernacular} %} page.photos.h1.title {% endtrans %}</h1>
                            {% elseif (params.species is defined) and (params.species is not empty) %}
                                <h1>{% trans with {'%type%': "page.photos.keyword.species"|trans, '%value%': objs.species.name} %} page.photos.h1.title {% endtrans %}</h1>
                            {% elseif (params.genus is defined) and (params.genus is not empty) %}
                                <h1>{% trans with {'%type%': "page.photos.keyword.genus"|trans, '%value%': objs.species.genus.name} %} page.photos.h1.title {% endtrans %}</h1>
                            {% elseif (params.family is defined) and (params.family is not empty) %}
                                <h1>{% trans with {'%type%': "page.photos.keyword.family"|trans, '%value%': objs.species.genus.family.name} %} page.photos.h1.title {% endtrans %}</h1>
                            {% elseif (params.order is defined) and (params.order is not empty) %}
                                <h1>{% trans with {'%type%': "page.photos.keyword.order"|trans, '%value%': objs.species.genus.family.order.name} %} page.photos.h1.title {% endtrans %}</h1>
                            {% elseif (params.class is defined) and (params.class is not empty) %}
                                <h1>{% trans with {'%type%': "page.photos.keyword.class"|trans, '%value%': objs.species.genus.family.order.class.name} %} page.photos.h1.title {% endtrans %}</h1>
                            {% elseif (params.phylum is defined) and (params.phylum is not empty) %}
                                <h1>{% trans with {'%type%': "page.photos.keyword.phylum"|trans, '%value%': objs.species.genus.family.order.class.phylum.name} %} page.photos.h1.title {% endtrans %}</h1>
                            {% elseif (params.kingdom is defined) and (params.kingdom is not empty) %}
                                <h1>{% trans with {'%type%': "page.photos.keyword.kingdom"|trans, '%value%': objs.species.genus.family.order.class.phylum.kingdom.name} %} page.photos.h1.title {% endtrans %}</h1>

                                <!-----spots----->
                            {% elseif (params.spot is defined) and (params.spot is not empty) %}
                                <h1>{% trans with {'%type%': "page.photos.keyword.spot"|trans, '%value%': objs.spot.name~", "~objs.spot.location.name~", "~objs.spot.location.region.country} %} page.photos.h1.title {% endtrans %}</h1>
                            {% elseif (params.location is defined) and (params.location is not empty) %}
                                <h1>{% trans with {'%type%': "page.photos.keyword.location"|trans, '%value%': objs.spot.location.name~", "~objs.spot.location.region.name~", "~objs.spot.location.region.country} %} page.photos.h1.title {% endtrans %}</h1>
                            {% elseif (params.region is defined) and (params.region is not empty) %}
                                <h1>{% trans with {'%type%': "page.photos.keyword.region"|trans, '%value%': objs.spot.location.region.name~", "~objs.spot.location.region.country} %} page.photos.h1.title {% endtrans %}</h1>  
                            {% elseif (params.country is defined) and (params.country is not empty) %}
                                <h1>{% trans with {'%type%': "page.photos.keyword.country"|trans, '%value%': objs.spot.location.region.country} %} page.photos.h1.title {% endtrans %}</h1>

                                <!-----fosuser----->
                            {% elseif (params.fosUser is defined) and (params.fosUser is not empty) %}
                                <h1>{% trans with {'%type%': "page.photos.keyword.fosUser"|trans, '%value%': objs.fosUser} %} page.photos.h1.title {% endtrans %}</h1>

                                <!-----someting else----->
                            {% else %}
                                <h1>{{ "page.photos_something_else.h1.title"|trans }}</h1>
                            {% endif %}#}
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="ibox" id="home_box">
                        <div class="ibox-title">

                            <h5>{{"page.photos.h5.filter_gallery"|trans}}&nbsp;</h5>

                            {% if (params.fosUser is defined) and (params.fosUser is not empty) %}
                                <h5>{% trans with {'%user%': objs.fosUser} %} page.photos.p.selected_fields_user {% endtrans %}&nbsp;</h5>
                            {% endif %}

                            <!-----spots----->
                            {% if (params.spot is defined) and (params.spot is not empty) %}
                                <h5>{% trans with {'%spot%': objs.spot.name~", "~objs.spot.location.name~", "~objs.spot.location.region.country} %} page.photos.p.selected_fields_spot {% endtrans %}&nbsp;</h5>
                            {% elseif (params.spotName is defined) and (params.spotName is not empty) %}
                                <h5>{% trans with {'%spot%': objs.spot.name~", "~objs.spot.location.name~", "~objs.spot.location.region.country} %} page.photos.p.selected_fields_spot {% endtrans %}&nbsp;</h5>
                            {% elseif (params.location is defined) and (params.location is not empty) %}
                                <h5>{% trans with {'%location%': objs.spot.location.name~", "~objs.spot.location.region.name~", "~objs.spot.location.region.country} %} page.photos.p.selected_fields_location {% endtrans %}&nbsp;</h5>
                            {% elseif (params.region is defined) and (params.region is not empty) %}
                                <h5>{% trans with {'%region%': objs.spot.location.region.name~", "~objs.spot.location.region.country} %} page.photos.p.selected_fields_region {% endtrans %}&nbsp;</h5>
                            {% elseif (params.country is defined) and (params.country is not empty) %}
                                <h5>{% trans with {'%country%': objs.spot.location.region.country} %} page.photos.p.selected_fields_country {% endtrans %}&nbsp;</h5>
                            {% elseif (params.countryName is defined) and (params.countryName is not empty) %}
                                <h5>{% trans with {'%country%': objs.spot.location.region.country} %} page.photos.p.selected_fields_country {% endtrans %}&nbsp;</h5>
                            {% endif %}

                            <!-----marine animals----->
                            {% if (params.vernacular is defined) and (params.vernacular is not empty) %}
                                <h5>{% trans with {'%vernacular%': params.vernacular} %} page.photos.p.selected_fields_vernacular {% endtrans %}&nbsp;</h5>
                            {% elseif (params.species is defined) and (params.species is not empty) %}
                                <h5>{% trans with {'%species%': params.species} %} page.photos.p.selected_fields_species {% endtrans %}&nbsp;</h5>
                            {% elseif (params.genus is defined) and (params.genus is not empty) %}
                                <h5>{% trans with {'%genus%': objs.species.genus.name} %} page.photos.p.selected_fields_genus {% endtrans %}&nbsp;</h5>
                            {% elseif (params.family is defined) and (params.family is not empty) %}
                                <h5>{% trans with {'%family%': objs.species.genus.family.name} %} page.photos.p.selected_fields_family {% endtrans %}&nbsp;</h5>
                            {% elseif (params.order is defined) and (params.order is not empty) %}
                                <h5>{% trans with {'%order%': objs.species.genus.family.order.name} %} page.photos.p.selected_fields_order {% endtrans %}&nbsp;</h5>
                            {% elseif (params.class is defined) and (params.class is not empty) %}
                                <h5>{% trans with {'%class%': objs.species.genus.family.order.class.name} %} page.photos.p.selected_fields_class {% endtrans %}&nbsp;</h5>
                            {% elseif (params.phylum is defined) and (params.phylum is not empty) %}
                                <h5>{% trans with {'%phylum%': objs.species.genus.family.order.class.phylum.name} %} page.photos.p.selected_fields_phylum {% endtrans %}&nbsp;</h5>
                            {% elseif (params.kingdom is defined) and (params.kingdom is not empty) %}
                                <h5>{% trans with {'%kingdom%': objs.species.genus.family.order.class.phylum.kingdom.name} %} page.photos.p.selected_fields_kingdom {% endtrans %}&nbsp;</h5>
                            {% endif %}

                            <!-----someting else----->
                            {% if content is empty %}
                                <h5>{{ "page.photos.p.no_fileds_selected"|trans }}&nbsp;</h5>
                            {% endif %}

                            <h5>{% trans with {'%sort%': sort} %} page.photos.p.sorting_order {% endtrans %}.&nbsp;</h5>

                            <h5>{{"page.photos.h5.click_arrow"|trans}}</h5>
                            <div class="ibox-tools">
                                <a class="collapse-link">
                                    <i class="fa fa-chevron-up"></i>
                                </a>
                            </div>
                        </div>
                        <div class="ibox-content">
                            <p>{{"page.photos.p.filter_gallery"|trans}}</p>
                            {% include 'SkaphandrusAppBundle:Common:formFilterGallery.html.twig' %}
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="ibox">
                        {{ knp_pagination_sortable(pagination, 'page.photos.button.better_validated'|trans, 'p.validatedRating', {direction: 'desc'}) }}
                        | {{ knp_pagination_sortable(pagination, 'page.photos.button.id_desc'|trans, 'p.id', {direction: 'desc'}) }}
                    </div>
                </div>
            </div>

            {#<div class="row">
                <div class="col-md-6">
                    <div class="ibox">

                        <h4>{{"page.photos.h4.selected_fields"|trans}}</h4>

                        {% if (params.fosUser is defined) and (params.fosUser is not empty) %}
                            <p>{% trans with {'%user%': objs.fosUser} %} page.photos.p.selected_fields_user {% endtrans %}</p>
                        {% endif %}

                        <!-----spots----->
                        {% if (params.spot is defined) and (params.spot is not empty) %}
                            <p>{% trans with {'%spot%': objs.spot.name~", "~objs.spot.location.name~", "~objs.spot.location.region.country} %} page.photos.p.selected_fields_spot {% endtrans %}</p>
                        {% elseif (params.spotName is defined) and (params.spotName is not empty) %}
                            {% trans with {'%spot%': objs.spot.name~", "~objs.spot.location.name~", "~objs.spot.location.region.country} %} page.photos.p.selected_fields_spot {% endtrans %}</p>
                        {% elseif (params.location is defined) and (params.location is not empty) %}
                            <p>{% trans with {'%location%': objs.spot.location.name~", "~objs.spot.location.region.name~", "~objs.spot.location.region.country} %} page.photos.p.selected_fields_location {% endtrans %}</p>
                        {% elseif (params.region is defined) and (params.region is not empty) %}
                            <p>{% trans with {'%region%': objs.spot.location.region.name~", "~objs.spot.location.region.country} %} page.photos.p.selected_fields_region {% endtrans %}</p>
                        {% elseif (params.country is defined) and (params.country is not empty) %}
                            <p>{% trans with {'%country%': objs.spot.location.region.country} %} page.photos.p.selected_fields_country {% endtrans %}</p>
                        {% elseif (params.countryName is defined) and (params.countryName is not empty) %}
                            <p>{% trans with {'%country%': objs.spot.location.region.country} %} page.photos.p.selected_fields_country {% endtrans %}</p>
                        {% endif %}

                        <!-----marine animals----->
                        {% if (params.vernacular is defined) and (params.vernacular is not empty) %}
                            <p>{% trans with {'%vernacular%': params.vernacular} %} page.photos.p.selected_fields_vernacular {% endtrans %}</p>
                        {% elseif (params.species is defined) and (params.species is not empty) %}
                            <p>{% trans with {'%species%': objs.species.name} %} page.photos.p.selected_fields_species {% endtrans %}</p>
                        {% elseif (params.genus is defined) and (params.genus is not empty) %}
                            <p>{% trans with {'%genus%': objs.species.genus.name} %} page.photos.p.selected_fields_genus {% endtrans %}</p>
                        {% elseif (params.family is defined) and (params.family is not empty) %}
                            <p>{% trans with {'%family%': objs.species.genus.family.name} %} page.photos.p.selected_fields_family {% endtrans %}</p>
                        {% elseif (params.order is defined) and (params.order is not empty) %}
                            <p>{% trans with {'%order%': objs.species.genus.family.order.name} %} page.photos.p.selected_fields_order {% endtrans %}</p>
                        {% elseif (params.class is defined) and (params.class is not empty) %}
                            <p>{% trans with {'%class%': objs.species.genus.family.order.class.name} %} page.photos.p.selected_fields_class {% endtrans %}</p>
                        {% elseif (params.phylum is defined) and (params.phylum is not empty) %}
                            <p>{% trans with {'%phylum%': objs.species.genus.family.order.class.phylum.name} %} page.photos.p.selected_fields_phylum {% endtrans %}</p>
                        {% elseif (params.kingdom is defined) and (params.kingdom is not empty) %}
                            <p>{% trans with {'%kingdom%': objs.species.genus.family.order.class.phylum.kingdom.name} %} page.photos.p.selected_fields_kingdom {% endtrans %}</p>
                        {% endif %}

                        <!-----someting else----->
                        {% if content is empty %}
                            <p>{{"page.photos.p.no_fileds_selected"|trans}}</p>
                        {% endif %}

                        <br/>

                    </div>
                </div>
                <div class="col-md-6">
                    <div class="ibox">

                        <h4>{{"page.photos.h4.sorting_order"|trans}}</h4>
                        <p>{% trans with {'%sort%': sort} %} page.photos.p.sorting_order {% endtrans %}</p>

                    </div>
                </div>
            </div>#}

            <div class="row gallery">
                {% for photo in pagination %}
                    <div class="col-lg-3 col-md-6 col-sm-12 grid-item-gallery">
                        <div class="ibox float-e-margins">
                            <!--<div class="ibox-title"><h5>{{photo.title}}</h5></div>-->
                            <div itemprop="image" itemscope itemtype="http://schema.org/ImageObject">
                                <div class="ibox-content ibox-content no-padding border-left-right">
                                    <meta itemprop="name" content="{{photo.title}}">
                                    <a href="{{ url_to_photo(photo) }}" title="{{ photo.title }}">
                                        <img itemprop="image" alt="{{photo.title}}" class="img-responsive" src="{{ photo.getWebPath | imagine_filter('sk_widen_400') }}" />
                                    </a>
                                </div>
                                <div class="ibox-content profile-content">
                                    <h4><strong>{{ photo.title }}</strong></h4>
                                    <ul class="list-unstyled">
                                        <li itemprop="author" itemscope itemtype="http://schema.org/Person">
                                            <meta itemprop="name" content="{{ photo.fosUser.name }}">
                                            {{ "page.photos.label.username"|trans }}: <a href="{{ url_to_user(photo.fosUser) }}">{{ photo.fosUser.name }}</a>
                                        </li>
                                        {% if photo.spot is not null %}
                                            <li itemprop="contentLocation" itemscope itemtype="http://schema.org/TouristAttraction">
                                                <meta itemprop="name" content="{{ photo.spot.name }}">
                                                {{ "page.photos.label.spot"|trans }}: <a href="{{ url_to_spot(photo.spot) }}">{{ photo.spot.name }}</a>
                                            </li>
                                        {% endif %}
                                        {% if photo.species is not null %}
                                            <li>
                                                {{ "page.photos.label.species"|trans }}: <a href="{{ url_to_species(photo.species) }}">{{ photo.species.name }}</a>
                                            </li>
                                        {% endif %}
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>

            <div class="navigation">
                {{ knp_pagination_render(pagination) }}
            </div>

        </div>
    </div>
{% endblock %}
